/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UserRouteImport } from './routes/user'
import { Route as SupportRouteImport } from './routes/support'
import { Route as ProtectedContentRouteImport } from './routes/protected-content'
import { Route as NotificationsRouteImport } from './routes/notifications'
import { Route as LeadCaptureRouteImport } from './routes/lead-capture'
import { Route as EmailListRouteImport } from './routes/email-list'
import { Route as CustomCodeRouteImport } from './routes/custom-code'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserIndexRouteImport } from './routes/user.index'
import { Route as SupportIndexRouteImport } from './routes/support.index'
import { Route as ProtectedContentIndexRouteImport } from './routes/protected-content.index'
import { Route as LeadCaptureIndexRouteImport } from './routes/lead-capture.index'
import { Route as EmailListIndexRouteImport } from './routes/email-list.index'
import { Route as CustomCodeIndexRouteImport } from './routes/custom-code.index'
import { Route as AuthIndexRouteImport } from './routes/auth.index'
import { Route as UserOverridesRouteImport } from './routes/user.overrides'
import { Route as ProtectedContentOverridesRouteImport } from './routes/protected-content.overrides'
import { Route as AuthLogoutRouteImport } from './routes/auth.logout'
import { Route as AuthLoginRouteImport } from './routes/auth.login'

const UserRoute = UserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRouteImport,
} as any)
const SupportRoute = SupportRouteImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedContentRoute = ProtectedContentRouteImport.update({
  id: '/protected-content',
  path: '/protected-content',
  getParentRoute: () => rootRouteImport,
} as any)
const NotificationsRoute = NotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => rootRouteImport,
} as any)
const LeadCaptureRoute = LeadCaptureRouteImport.update({
  id: '/lead-capture',
  path: '/lead-capture',
  getParentRoute: () => rootRouteImport,
} as any)
const EmailListRoute = EmailListRouteImport.update({
  id: '/email-list',
  path: '/email-list',
  getParentRoute: () => rootRouteImport,
} as any)
const CustomCodeRoute = CustomCodeRouteImport.update({
  id: '/custom-code',
  path: '/custom-code',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserIndexRoute = UserIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserRoute,
} as any)
const SupportIndexRoute = SupportIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SupportRoute,
} as any)
const ProtectedContentIndexRoute = ProtectedContentIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedContentRoute,
} as any)
const LeadCaptureIndexRoute = LeadCaptureIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LeadCaptureRoute,
} as any)
const EmailListIndexRoute = EmailListIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EmailListRoute,
} as any)
const CustomCodeIndexRoute = CustomCodeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CustomCodeRoute,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const UserOverridesRoute = UserOverridesRouteImport.update({
  id: '/overrides',
  path: '/overrides',
  getParentRoute: () => UserRoute,
} as any)
const ProtectedContentOverridesRoute =
  ProtectedContentOverridesRouteImport.update({
    id: '/overrides',
    path: '/overrides',
    getParentRoute: () => ProtectedContentRoute,
  } as any)
const AuthLogoutRoute = AuthLogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof AuthRouteWithChildren
  '/custom-code': typeof CustomCodeRouteWithChildren
  '/email-list': typeof EmailListRouteWithChildren
  '/lead-capture': typeof LeadCaptureRouteWithChildren
  '/notifications': typeof NotificationsRoute
  '/protected-content': typeof ProtectedContentRouteWithChildren
  '/support': typeof SupportRouteWithChildren
  '/user': typeof UserRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/protected-content/overrides': typeof ProtectedContentOverridesRoute
  '/user/overrides': typeof UserOverridesRoute
  '/auth/': typeof AuthIndexRoute
  '/custom-code/': typeof CustomCodeIndexRoute
  '/email-list/': typeof EmailListIndexRoute
  '/lead-capture/': typeof LeadCaptureIndexRoute
  '/protected-content/': typeof ProtectedContentIndexRoute
  '/support/': typeof SupportIndexRoute
  '/user/': typeof UserIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/notifications': typeof NotificationsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/protected-content/overrides': typeof ProtectedContentOverridesRoute
  '/user/overrides': typeof UserOverridesRoute
  '/auth': typeof AuthIndexRoute
  '/custom-code': typeof CustomCodeIndexRoute
  '/email-list': typeof EmailListIndexRoute
  '/lead-capture': typeof LeadCaptureIndexRoute
  '/protected-content': typeof ProtectedContentIndexRoute
  '/support': typeof SupportIndexRoute
  '/user': typeof UserIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof AuthRouteWithChildren
  '/custom-code': typeof CustomCodeRouteWithChildren
  '/email-list': typeof EmailListRouteWithChildren
  '/lead-capture': typeof LeadCaptureRouteWithChildren
  '/notifications': typeof NotificationsRoute
  '/protected-content': typeof ProtectedContentRouteWithChildren
  '/support': typeof SupportRouteWithChildren
  '/user': typeof UserRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/protected-content/overrides': typeof ProtectedContentOverridesRoute
  '/user/overrides': typeof UserOverridesRoute
  '/auth/': typeof AuthIndexRoute
  '/custom-code/': typeof CustomCodeIndexRoute
  '/email-list/': typeof EmailListIndexRoute
  '/lead-capture/': typeof LeadCaptureIndexRoute
  '/protected-content/': typeof ProtectedContentIndexRoute
  '/support/': typeof SupportIndexRoute
  '/user/': typeof UserIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth'
    | '/custom-code'
    | '/email-list'
    | '/lead-capture'
    | '/notifications'
    | '/protected-content'
    | '/support'
    | '/user'
    | '/auth/login'
    | '/auth/logout'
    | '/protected-content/overrides'
    | '/user/overrides'
    | '/auth/'
    | '/custom-code/'
    | '/email-list/'
    | '/lead-capture/'
    | '/protected-content/'
    | '/support/'
    | '/user/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/notifications'
    | '/auth/login'
    | '/auth/logout'
    | '/protected-content/overrides'
    | '/user/overrides'
    | '/auth'
    | '/custom-code'
    | '/email-list'
    | '/lead-capture'
    | '/protected-content'
    | '/support'
    | '/user'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth'
    | '/custom-code'
    | '/email-list'
    | '/lead-capture'
    | '/notifications'
    | '/protected-content'
    | '/support'
    | '/user'
    | '/auth/login'
    | '/auth/logout'
    | '/protected-content/overrides'
    | '/user/overrides'
    | '/auth/'
    | '/custom-code/'
    | '/email-list/'
    | '/lead-capture/'
    | '/protected-content/'
    | '/support/'
    | '/user/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AuthRoute: typeof AuthRouteWithChildren
  CustomCodeRoute: typeof CustomCodeRouteWithChildren
  EmailListRoute: typeof EmailListRouteWithChildren
  LeadCaptureRoute: typeof LeadCaptureRouteWithChildren
  NotificationsRoute: typeof NotificationsRoute
  ProtectedContentRoute: typeof ProtectedContentRouteWithChildren
  SupportRoute: typeof SupportRouteWithChildren
  UserRoute: typeof UserRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/support': {
      id: '/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof SupportRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/protected-content': {
      id: '/protected-content'
      path: '/protected-content'
      fullPath: '/protected-content'
      preLoaderRoute: typeof ProtectedContentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notifications': {
      id: '/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof NotificationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lead-capture': {
      id: '/lead-capture'
      path: '/lead-capture'
      fullPath: '/lead-capture'
      preLoaderRoute: typeof LeadCaptureRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/email-list': {
      id: '/email-list'
      path: '/email-list'
      fullPath: '/email-list'
      preLoaderRoute: typeof EmailListRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/custom-code': {
      id: '/custom-code'
      path: '/custom-code'
      fullPath: '/custom-code'
      preLoaderRoute: typeof CustomCodeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/': {
      id: '/user/'
      path: '/'
      fullPath: '/user/'
      preLoaderRoute: typeof UserIndexRouteImport
      parentRoute: typeof UserRoute
    }
    '/support/': {
      id: '/support/'
      path: '/'
      fullPath: '/support/'
      preLoaderRoute: typeof SupportIndexRouteImport
      parentRoute: typeof SupportRoute
    }
    '/protected-content/': {
      id: '/protected-content/'
      path: '/'
      fullPath: '/protected-content/'
      preLoaderRoute: typeof ProtectedContentIndexRouteImport
      parentRoute: typeof ProtectedContentRoute
    }
    '/lead-capture/': {
      id: '/lead-capture/'
      path: '/'
      fullPath: '/lead-capture/'
      preLoaderRoute: typeof LeadCaptureIndexRouteImport
      parentRoute: typeof LeadCaptureRoute
    }
    '/email-list/': {
      id: '/email-list/'
      path: '/'
      fullPath: '/email-list/'
      preLoaderRoute: typeof EmailListIndexRouteImport
      parentRoute: typeof EmailListRoute
    }
    '/custom-code/': {
      id: '/custom-code/'
      path: '/'
      fullPath: '/custom-code/'
      preLoaderRoute: typeof CustomCodeIndexRouteImport
      parentRoute: typeof CustomCodeRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/user/overrides': {
      id: '/user/overrides'
      path: '/overrides'
      fullPath: '/user/overrides'
      preLoaderRoute: typeof UserOverridesRouteImport
      parentRoute: typeof UserRoute
    }
    '/protected-content/overrides': {
      id: '/protected-content/overrides'
      path: '/overrides'
      fullPath: '/protected-content/overrides'
      preLoaderRoute: typeof ProtectedContentOverridesRouteImport
      parentRoute: typeof ProtectedContentRoute
    }
    '/auth/logout': {
      id: '/auth/logout'
      path: '/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface CustomCodeRouteChildren {
  CustomCodeIndexRoute: typeof CustomCodeIndexRoute
}

const CustomCodeRouteChildren: CustomCodeRouteChildren = {
  CustomCodeIndexRoute: CustomCodeIndexRoute,
}

const CustomCodeRouteWithChildren = CustomCodeRoute._addFileChildren(
  CustomCodeRouteChildren,
)

interface EmailListRouteChildren {
  EmailListIndexRoute: typeof EmailListIndexRoute
}

const EmailListRouteChildren: EmailListRouteChildren = {
  EmailListIndexRoute: EmailListIndexRoute,
}

const EmailListRouteWithChildren = EmailListRoute._addFileChildren(
  EmailListRouteChildren,
)

interface LeadCaptureRouteChildren {
  LeadCaptureIndexRoute: typeof LeadCaptureIndexRoute
}

const LeadCaptureRouteChildren: LeadCaptureRouteChildren = {
  LeadCaptureIndexRoute: LeadCaptureIndexRoute,
}

const LeadCaptureRouteWithChildren = LeadCaptureRoute._addFileChildren(
  LeadCaptureRouteChildren,
)

interface ProtectedContentRouteChildren {
  ProtectedContentOverridesRoute: typeof ProtectedContentOverridesRoute
  ProtectedContentIndexRoute: typeof ProtectedContentIndexRoute
}

const ProtectedContentRouteChildren: ProtectedContentRouteChildren = {
  ProtectedContentOverridesRoute: ProtectedContentOverridesRoute,
  ProtectedContentIndexRoute: ProtectedContentIndexRoute,
}

const ProtectedContentRouteWithChildren =
  ProtectedContentRoute._addFileChildren(ProtectedContentRouteChildren)

interface SupportRouteChildren {
  SupportIndexRoute: typeof SupportIndexRoute
}

const SupportRouteChildren: SupportRouteChildren = {
  SupportIndexRoute: SupportIndexRoute,
}

const SupportRouteWithChildren =
  SupportRoute._addFileChildren(SupportRouteChildren)

interface UserRouteChildren {
  UserOverridesRoute: typeof UserOverridesRoute
  UserIndexRoute: typeof UserIndexRoute
}

const UserRouteChildren: UserRouteChildren = {
  UserOverridesRoute: UserOverridesRoute,
  UserIndexRoute: UserIndexRoute,
}

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AuthRoute: AuthRouteWithChildren,
  CustomCodeRoute: CustomCodeRouteWithChildren,
  EmailListRoute: EmailListRouteWithChildren,
  LeadCaptureRoute: LeadCaptureRouteWithChildren,
  NotificationsRoute: NotificationsRoute,
  ProtectedContentRoute: ProtectedContentRouteWithChildren,
  SupportRoute: SupportRouteWithChildren,
  UserRoute: UserRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
