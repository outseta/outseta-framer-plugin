/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UserImport } from './routes/user'
import { Route as SupportImport } from './routes/support'
import { Route as ProtectedContentImport } from './routes/protected-content'
import { Route as NotificationsImport } from './routes/notifications'
import { Route as LeadCaptureImport } from './routes/lead-capture'
import { Route as EmailListImport } from './routes/email-list'
import { Route as CustomCodeImport } from './routes/custom-code'
import { Route as AuthImport } from './routes/auth'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as UserIndexImport } from './routes/user.index'
import { Route as SupportIndexImport } from './routes/support.index'
import { Route as ProtectedContentIndexImport } from './routes/protected-content.index'
import { Route as LeadCaptureIndexImport } from './routes/lead-capture.index'
import { Route as EmailListIndexImport } from './routes/email-list.index'
import { Route as CustomCodeIndexImport } from './routes/custom-code.index'
import { Route as AuthIndexImport } from './routes/auth.index'
import { Route as UserOverridesImport } from './routes/user.overrides'
import { Route as ProtectedContentOverridesImport } from './routes/protected-content.overrides'
import { Route as AuthLogoutImport } from './routes/auth.logout'
import { Route as AuthLoginImport } from './routes/auth.login'

// Create/Update Routes

const UserRoute = UserImport.update({
  path: '/user',
  getParentRoute: () => rootRoute,
} as any)

const SupportRoute = SupportImport.update({
  path: '/support',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedContentRoute = ProtectedContentImport.update({
  path: '/protected-content',
  getParentRoute: () => rootRoute,
} as any)

const NotificationsRoute = NotificationsImport.update({
  path: '/notifications',
  getParentRoute: () => rootRoute,
} as any)

const LeadCaptureRoute = LeadCaptureImport.update({
  path: '/lead-capture',
  getParentRoute: () => rootRoute,
} as any)

const EmailListRoute = EmailListImport.update({
  path: '/email-list',
  getParentRoute: () => rootRoute,
} as any)

const CustomCodeRoute = CustomCodeImport.update({
  path: '/custom-code',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserIndexRoute = UserIndexImport.update({
  path: '/',
  getParentRoute: () => UserRoute,
} as any)

const SupportIndexRoute = SupportIndexImport.update({
  path: '/',
  getParentRoute: () => SupportRoute,
} as any)

const ProtectedContentIndexRoute = ProtectedContentIndexImport.update({
  path: '/',
  getParentRoute: () => ProtectedContentRoute,
} as any)

const LeadCaptureIndexRoute = LeadCaptureIndexImport.update({
  path: '/',
  getParentRoute: () => LeadCaptureRoute,
} as any)

const EmailListIndexRoute = EmailListIndexImport.update({
  path: '/',
  getParentRoute: () => EmailListRoute,
} as any)

const CustomCodeIndexRoute = CustomCodeIndexImport.update({
  path: '/',
  getParentRoute: () => CustomCodeRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const UserOverridesRoute = UserOverridesImport.update({
  path: '/overrides',
  getParentRoute: () => UserRoute,
} as any)

const ProtectedContentOverridesRoute = ProtectedContentOverridesImport.update({
  path: '/overrides',
  getParentRoute: () => ProtectedContentRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  path: '/logout',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/custom-code': {
      id: '/custom-code'
      path: '/custom-code'
      fullPath: '/custom-code'
      preLoaderRoute: typeof CustomCodeImport
      parentRoute: typeof rootRoute
    }
    '/email-list': {
      id: '/email-list'
      path: '/email-list'
      fullPath: '/email-list'
      preLoaderRoute: typeof EmailListImport
      parentRoute: typeof rootRoute
    }
    '/lead-capture': {
      id: '/lead-capture'
      path: '/lead-capture'
      fullPath: '/lead-capture'
      preLoaderRoute: typeof LeadCaptureImport
      parentRoute: typeof rootRoute
    }
    '/notifications': {
      id: '/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof NotificationsImport
      parentRoute: typeof rootRoute
    }
    '/protected-content': {
      id: '/protected-content'
      path: '/protected-content'
      fullPath: '/protected-content'
      preLoaderRoute: typeof ProtectedContentImport
      parentRoute: typeof rootRoute
    }
    '/support': {
      id: '/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof SupportImport
      parentRoute: typeof rootRoute
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/auth/logout': {
      id: '/auth/logout'
      path: '/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof AuthImport
    }
    '/protected-content/overrides': {
      id: '/protected-content/overrides'
      path: '/overrides'
      fullPath: '/protected-content/overrides'
      preLoaderRoute: typeof ProtectedContentOverridesImport
      parentRoute: typeof ProtectedContentImport
    }
    '/user/overrides': {
      id: '/user/overrides'
      path: '/overrides'
      fullPath: '/user/overrides'
      preLoaderRoute: typeof UserOverridesImport
      parentRoute: typeof UserImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/custom-code/': {
      id: '/custom-code/'
      path: '/'
      fullPath: '/custom-code/'
      preLoaderRoute: typeof CustomCodeIndexImport
      parentRoute: typeof CustomCodeImport
    }
    '/email-list/': {
      id: '/email-list/'
      path: '/'
      fullPath: '/email-list/'
      preLoaderRoute: typeof EmailListIndexImport
      parentRoute: typeof EmailListImport
    }
    '/lead-capture/': {
      id: '/lead-capture/'
      path: '/'
      fullPath: '/lead-capture/'
      preLoaderRoute: typeof LeadCaptureIndexImport
      parentRoute: typeof LeadCaptureImport
    }
    '/protected-content/': {
      id: '/protected-content/'
      path: '/'
      fullPath: '/protected-content/'
      preLoaderRoute: typeof ProtectedContentIndexImport
      parentRoute: typeof ProtectedContentImport
    }
    '/support/': {
      id: '/support/'
      path: '/'
      fullPath: '/support/'
      preLoaderRoute: typeof SupportIndexImport
      parentRoute: typeof SupportImport
    }
    '/user/': {
      id: '/user/'
      path: '/'
      fullPath: '/user/'
      preLoaderRoute: typeof UserIndexImport
      parentRoute: typeof UserImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface CustomCodeRouteChildren {
  CustomCodeIndexRoute: typeof CustomCodeIndexRoute
}

const CustomCodeRouteChildren: CustomCodeRouteChildren = {
  CustomCodeIndexRoute: CustomCodeIndexRoute,
}

const CustomCodeRouteWithChildren = CustomCodeRoute._addFileChildren(
  CustomCodeRouteChildren,
)

interface EmailListRouteChildren {
  EmailListIndexRoute: typeof EmailListIndexRoute
}

const EmailListRouteChildren: EmailListRouteChildren = {
  EmailListIndexRoute: EmailListIndexRoute,
}

const EmailListRouteWithChildren = EmailListRoute._addFileChildren(
  EmailListRouteChildren,
)

interface LeadCaptureRouteChildren {
  LeadCaptureIndexRoute: typeof LeadCaptureIndexRoute
}

const LeadCaptureRouteChildren: LeadCaptureRouteChildren = {
  LeadCaptureIndexRoute: LeadCaptureIndexRoute,
}

const LeadCaptureRouteWithChildren = LeadCaptureRoute._addFileChildren(
  LeadCaptureRouteChildren,
)

interface ProtectedContentRouteChildren {
  ProtectedContentOverridesRoute: typeof ProtectedContentOverridesRoute
  ProtectedContentIndexRoute: typeof ProtectedContentIndexRoute
}

const ProtectedContentRouteChildren: ProtectedContentRouteChildren = {
  ProtectedContentOverridesRoute: ProtectedContentOverridesRoute,
  ProtectedContentIndexRoute: ProtectedContentIndexRoute,
}

const ProtectedContentRouteWithChildren =
  ProtectedContentRoute._addFileChildren(ProtectedContentRouteChildren)

interface SupportRouteChildren {
  SupportIndexRoute: typeof SupportIndexRoute
}

const SupportRouteChildren: SupportRouteChildren = {
  SupportIndexRoute: SupportIndexRoute,
}

const SupportRouteWithChildren =
  SupportRoute._addFileChildren(SupportRouteChildren)

interface UserRouteChildren {
  UserOverridesRoute: typeof UserOverridesRoute
  UserIndexRoute: typeof UserIndexRoute
}

const UserRouteChildren: UserRouteChildren = {
  UserOverridesRoute: UserOverridesRoute,
  UserIndexRoute: UserIndexRoute,
}

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof AuthRouteWithChildren
  '/custom-code': typeof CustomCodeRouteWithChildren
  '/email-list': typeof EmailListRouteWithChildren
  '/lead-capture': typeof LeadCaptureRouteWithChildren
  '/notifications': typeof NotificationsRoute
  '/protected-content': typeof ProtectedContentRouteWithChildren
  '/support': typeof SupportRouteWithChildren
  '/user': typeof UserRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/protected-content/overrides': typeof ProtectedContentOverridesRoute
  '/user/overrides': typeof UserOverridesRoute
  '/auth/': typeof AuthIndexRoute
  '/custom-code/': typeof CustomCodeIndexRoute
  '/email-list/': typeof EmailListIndexRoute
  '/lead-capture/': typeof LeadCaptureIndexRoute
  '/protected-content/': typeof ProtectedContentIndexRoute
  '/support/': typeof SupportIndexRoute
  '/user/': typeof UserIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/notifications': typeof NotificationsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/protected-content/overrides': typeof ProtectedContentOverridesRoute
  '/user/overrides': typeof UserOverridesRoute
  '/auth': typeof AuthIndexRoute
  '/custom-code': typeof CustomCodeIndexRoute
  '/email-list': typeof EmailListIndexRoute
  '/lead-capture': typeof LeadCaptureIndexRoute
  '/protected-content': typeof ProtectedContentIndexRoute
  '/support': typeof SupportIndexRoute
  '/user': typeof UserIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof AuthRouteWithChildren
  '/custom-code': typeof CustomCodeRouteWithChildren
  '/email-list': typeof EmailListRouteWithChildren
  '/lead-capture': typeof LeadCaptureRouteWithChildren
  '/notifications': typeof NotificationsRoute
  '/protected-content': typeof ProtectedContentRouteWithChildren
  '/support': typeof SupportRouteWithChildren
  '/user': typeof UserRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/protected-content/overrides': typeof ProtectedContentOverridesRoute
  '/user/overrides': typeof UserOverridesRoute
  '/auth/': typeof AuthIndexRoute
  '/custom-code/': typeof CustomCodeIndexRoute
  '/email-list/': typeof EmailListIndexRoute
  '/lead-capture/': typeof LeadCaptureIndexRoute
  '/protected-content/': typeof ProtectedContentIndexRoute
  '/support/': typeof SupportIndexRoute
  '/user/': typeof UserIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth'
    | '/custom-code'
    | '/email-list'
    | '/lead-capture'
    | '/notifications'
    | '/protected-content'
    | '/support'
    | '/user'
    | '/auth/login'
    | '/auth/logout'
    | '/protected-content/overrides'
    | '/user/overrides'
    | '/auth/'
    | '/custom-code/'
    | '/email-list/'
    | '/lead-capture/'
    | '/protected-content/'
    | '/support/'
    | '/user/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/notifications'
    | '/auth/login'
    | '/auth/logout'
    | '/protected-content/overrides'
    | '/user/overrides'
    | '/auth'
    | '/custom-code'
    | '/email-list'
    | '/lead-capture'
    | '/protected-content'
    | '/support'
    | '/user'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth'
    | '/custom-code'
    | '/email-list'
    | '/lead-capture'
    | '/notifications'
    | '/protected-content'
    | '/support'
    | '/user'
    | '/auth/login'
    | '/auth/logout'
    | '/protected-content/overrides'
    | '/user/overrides'
    | '/auth/'
    | '/custom-code/'
    | '/email-list/'
    | '/lead-capture/'
    | '/protected-content/'
    | '/support/'
    | '/user/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AuthRoute: typeof AuthRouteWithChildren
  CustomCodeRoute: typeof CustomCodeRouteWithChildren
  EmailListRoute: typeof EmailListRouteWithChildren
  LeadCaptureRoute: typeof LeadCaptureRouteWithChildren
  NotificationsRoute: typeof NotificationsRoute
  ProtectedContentRoute: typeof ProtectedContentRouteWithChildren
  SupportRoute: typeof SupportRouteWithChildren
  UserRoute: typeof UserRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AuthRoute: AuthRouteWithChildren,
  CustomCodeRoute: CustomCodeRouteWithChildren,
  EmailListRoute: EmailListRouteWithChildren,
  LeadCaptureRoute: LeadCaptureRouteWithChildren,
  NotificationsRoute: NotificationsRoute,
  ProtectedContentRoute: ProtectedContentRouteWithChildren,
  SupportRoute: SupportRouteWithChildren,
  UserRoute: UserRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/auth",
        "/custom-code",
        "/email-list",
        "/lead-capture",
        "/notifications",
        "/protected-content",
        "/support",
        "/user"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx",
      "children": [
        "/auth/login",
        "/auth/logout",
        "/auth/"
      ]
    },
    "/custom-code": {
      "filePath": "custom-code.tsx",
      "children": [
        "/custom-code/"
      ]
    },
    "/email-list": {
      "filePath": "email-list.tsx",
      "children": [
        "/email-list/"
      ]
    },
    "/lead-capture": {
      "filePath": "lead-capture.tsx",
      "children": [
        "/lead-capture/"
      ]
    },
    "/notifications": {
      "filePath": "notifications.tsx"
    },
    "/protected-content": {
      "filePath": "protected-content.tsx",
      "children": [
        "/protected-content/overrides",
        "/protected-content/"
      ]
    },
    "/support": {
      "filePath": "support.tsx",
      "children": [
        "/support/"
      ]
    },
    "/user": {
      "filePath": "user.tsx",
      "children": [
        "/user/overrides",
        "/user/"
      ]
    },
    "/auth/login": {
      "filePath": "auth.login.tsx",
      "parent": "/auth"
    },
    "/auth/logout": {
      "filePath": "auth.logout.tsx",
      "parent": "/auth"
    },
    "/protected-content/overrides": {
      "filePath": "protected-content.overrides.tsx",
      "parent": "/protected-content"
    },
    "/user/overrides": {
      "filePath": "user.overrides.tsx",
      "parent": "/user"
    },
    "/auth/": {
      "filePath": "auth.index.tsx",
      "parent": "/auth"
    },
    "/custom-code/": {
      "filePath": "custom-code.index.tsx",
      "parent": "/custom-code"
    },
    "/email-list/": {
      "filePath": "email-list.index.tsx",
      "parent": "/email-list"
    },
    "/lead-capture/": {
      "filePath": "lead-capture.index.tsx",
      "parent": "/lead-capture"
    },
    "/protected-content/": {
      "filePath": "protected-content.index.tsx",
      "parent": "/protected-content"
    },
    "/support/": {
      "filePath": "support.index.tsx",
      "parent": "/support"
    },
    "/user/": {
      "filePath": "user.index.tsx",
      "parent": "/user"
    }
  }
}
ROUTE_MANIFEST_END */
